% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/indirect.relations.R
\name{indirect_relations}
\alias{indirect_relations}
\title{Indirect relations of a network}
\usage{
indirect_relations(g, relation = "geodesic", FUN = identity, ...)
}
\arguments{
\item{g}{igraph object. The network for which relations should be derived}

\item{relation}{string. giving the relation to be calculated. One of "identity",
"distances", "dependencies" or "walks". See Details.}

\item{FUN}{a weighting function. See Details.}

\item{...}{additional arguments passed to the function FUN.}
}
\value{
a matrix containing indirect relations in a network.
}
\description{
Derive indirect relations like distances, for a given network. This function
can be used to calculate a variety of centrality indices.
}
\details{
The \emph{relation} parameter has the following options.

\emph{"identity"} returns the adjacency matrix of the network.

\emph{"distances"} returns geodesic distances between all pairs of nodes.

\emph{"dependencies"} returns dyadic dependencies
\deqn{\delta(u,s) = \sum_{t \in V} \frac{\sigma(s,t|u)}{\sigma(s,t)}}
where \eqn{\sigma(s,t|u)} is the number of shortest paths from s to t that include u and
\eqn{\sigma(s,t)} is the total number of shortest (s,t)-paths. The row sums of the resulting matrix
is equal to the betweenness scores.

\emph{"walks"} returns walk counts between pairs of nodes, usually they are
weighted decreasingly in their lengths or other properties which can be done by adding
a function in \code{FUN}.

\emph{"resistance"} returns the resistance distance between all pairs of vertices.

The function \code{FUN} is used to further specify the indirect
relation. see \code{?transform_relations} for predefined functions.
}
\examples{

require(igraph)

}
\author{
David Schoch
}
