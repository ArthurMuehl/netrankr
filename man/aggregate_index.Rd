% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate.index.R
\name{aggregate_index}
\alias{aggregate_index}
\alias{aggregate_sum}
\alias{aggregate_prod}
\alias{aggregate_mean}
\alias{aggregate_max}
\alias{aggregate_min}
\alias{aggregate_invsum}
\alias{aggregate_self}
\title{aggregation functions of relations}
\usage{
aggregate_sum(tau_x)

aggregate_prod(tau_x)

aggregate_mean(tau_x)

aggregate_max(tau_x)

aggregate_min(tau_x)

aggregate_invsum(tau_x)

aggregate_self(tau_x)
}
\arguments{
\item{tau_x}{matrix containing indirect relations.}
}
\value{
scores for the index defined by the indirect relation \code{tau_x} and the
used aggregation function.
}
\description{
functions to aggregate indirect relations to construct centrality
scores from indirect relations calculated by \link{indirect_relations}.
}
\examples{
require(igraph)
require(magrittr)
g <- graph.empty(n=11,directed = FALSE)
g <- add_edges(g,c(1,11,2,4,3,5,3,11,4,8,5,9,5,11,6,7,6,8,
                   6,10,6,11,7,9,7,10,7,11,8,9,8,10,9,10))

#closeness centrality
g \%>\% indirect_relations(g,relation="geodesic") \%>\% aggregate_invsum()
#betweenness centrality
g \%>\% indirect_relations(g,relation="dependencies") \%>\% aggregate_sum()
#eigenvector centrality
g \%>\% indirect_relations(g,relation="walks",FUN=walks_limit_prop) \%>\% aggregate_invsum()
}
\author{
David Schoch
}
